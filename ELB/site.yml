---
- name: A simple Load Balanced AWS server
  hosts: localhost 
  connection: local
  gather_facts: False
  tasks:
    - name: Create security group
      ec2_group:
        name: "demo_security_group"
        description: "demo security group"
        region: "{{ region }}"
        rules:
          - proto: tcp  # ssh
            from_port: 22
            to_port: 22
            cidr_ip: 0.0.0.0/0
          - proto: tcp  # http
            from_port: 80
            to_port: 80
            cidr_ip: 0.0.0.0/0
          - proto: tcp  # https
            from_port: 443
            to_port: 443
            cidr_ip: 0.0.0.0/0
        rules_egress:
          - proto: all
            cidr_ip: 0.0.0.0/0
      register: demo_firewall

    - name: Create an EC2 instance
      ec2:
        key_name: "{{ pem_key }}"
        region: "{{ region }}"
        group_id: "{{ demo_firewall.group_id }}"
        instance_type: "{{ instance_type }}"
        image: "{{ ami }}"
        wait: yes
        instance_tags:
            env: "{{ env }}"
        count_tag: env
        exact_count: 1
        vpc_subnet_id: subnet-66d25311
        assign_public_ip: yes
      register: ec2

    - name: wait for the servers to appear on the network
      wait_for: host={{ item.public_dns_name }} port=22 delay=10 timeout=180 state=started
      with_items: ec2.tagged_instances

    - name: add server ip addresses to hosts group
      add_host: hostname={{ item.public_ip }} groupname=launched
      with_items: ec2.tagged_instances

- name: Install HTTPD 
    package:
        name: httpd
       state: latest
    register: httpd_install

- name: Copy conf file         
    template:
       src: index.html
       dest: "/etc/httpd/conf.d/{{ project_name }}.conf"
    when: httpd_install.failed == false and create_dir.failed == false
    notify: "Restart Httpd"

handlers:
- name: Restart Httpd
    service:
       name: httpd
       state: restarted

- name: spin up the load balancer and add the servers to it
  hosts: 127.0.0.1
  connection: local
  gather_facts: False
  tasks:
    - name: setup a simple load balancer
      ec2_elb_lb:
        name: aws-elb-demo
        state: present
        region: eu-central-1
        zones:
          - eu-centrala
        listeners:
          - protocol: http
            load_balancer_port: 80
            instance_port: 80
      register: aws-elb-demo

    - name: add the webservers to the load balancer
      local_action: ec2_elb
      args:
        instance_id: "{{ item.id }}"
        ec2_elbs: aws-elb-demo
        state: present
        region: eu-central
      with_items: ec2.tagged_instances
